<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="358" onload="init(evt)" viewBox="0 0 1200 358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="358.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="341" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="341" > </text>
<g id="frames">
<g >
<title>account_user_time (1 samples, 0.01%)</title><rect x="318.0" y="101" width="0.2" height="15.0" fill="rgb(210,21,12)" rx="2" ry="2" />
<text  x="321.03" y="111.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.02%)</title><rect x="318.0" y="181" width="0.3" height="15.0" fill="rgb(214,103,0)" rx="2" ry="2" />
<text  x="321.03" y="191.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.02%)</title><rect x="717.9" y="181" width="0.2" height="15.0" fill="rgb(230,131,27)" rx="2" ry="2" />
<text  x="720.88" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.02%)</title><rect x="318.0" y="197" width="0.3" height="15.0" fill="rgb(211,29,10)" rx="2" ry="2" />
<text  x="321.03" y="207.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.03%)</title><rect x="318.0" y="229" width="0.4" height="15.0" fill="rgb(238,154,43)" rx="2" ry="2" />
<text  x="321.03" y="239.5" ></text>
</g>
<g >
<title>native_write_msr (5 samples, 0.05%)</title><rect x="718.1" y="53" width="0.6" height="15.0" fill="rgb(209,87,25)" rx="2" ry="2" />
<text  x="721.12" y="63.5" ></text>
</g>
<g >
<title>remote_function (4 samples, 0.04%)</title><rect x="1187.6" y="165" width="0.5" height="15.0" fill="rgb(244,193,17)" rx="2" ry="2" />
<text  x="1190.59" y="175.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (10 samples, 0.10%)</title><rect x="1188.2" y="213" width="1.2" height="15.0" fill="rgb(241,45,12)" rx="2" ry="2" />
<text  x="1191.19" y="223.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.03%)</title><rect x="318.0" y="213" width="0.4" height="15.0" fill="rgb(222,75,2)" rx="2" ry="2" />
<text  x="321.03" y="223.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.01%)</title><rect x="402.6" y="85" width="0.1" height="15.0" fill="rgb(209,108,37)" rx="2" ry="2" />
<text  x="405.61" y="95.5" ></text>
</g>
<g >
<title>func_a (1,993 samples, 20.38%)</title><rect x="162.3" y="245" width="240.4" height="15.0" fill="rgb(215,55,35)" rx="2" ry="2" />
<text  x="165.27" y="255.5" >func_a</text>
</g>
<g >
<title>call_function_single_interrupt (5 samples, 0.05%)</title><rect x="1187.6" y="229" width="0.6" height="15.0" fill="rgb(230,26,40)" rx="2" ry="2" />
<text  x="1190.59" y="239.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.05%)</title><rect x="1189.4" y="229" width="0.6" height="15.0" fill="rgb(252,109,29)" rx="2" ry="2" />
<text  x="1192.40" y="239.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.05%)</title><rect x="1189.4" y="213" width="0.6" height="15.0" fill="rgb(252,83,29)" rx="2" ry="2" />
<text  x="1192.40" y="223.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.04%)</title><rect x="1187.6" y="85" width="0.5" height="15.0" fill="rgb(209,15,45)" rx="2" ry="2" />
<text  x="1190.59" y="95.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (5 samples, 0.05%)</title><rect x="718.1" y="229" width="0.6" height="15.0" fill="rgb(238,225,19)" rx="2" ry="2" />
<text  x="721.12" y="239.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (9 samples, 0.09%)</title><rect x="1188.3" y="117" width="1.1" height="15.0" fill="rgb(220,204,1)" rx="2" ry="2" />
<text  x="1191.31" y="127.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="718.0" y="149" width="0.1" height="15.0" fill="rgb(207,47,13)" rx="2" ry="2" />
<text  x="721.00" y="159.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime_field (1 samples, 0.01%)</title><rect x="718.0" y="85" width="0.1" height="15.0" fill="rgb(253,217,47)" rx="2" ry="2" />
<text  x="721.00" y="95.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.04%)</title><rect x="1187.6" y="53" width="0.5" height="15.0" fill="rgb(208,46,42)" rx="2" ry="2" />
<text  x="1190.59" y="63.5" ></text>
</g>
<g >
<title>group_sched_in (1 samples, 0.01%)</title><rect x="718.8" y="53" width="0.2" height="15.0" fill="rgb(248,199,49)" rx="2" ry="2" />
<text  x="721.84" y="63.5" ></text>
</g>
<g >
<title>visit_groups_merge (1 samples, 0.01%)</title><rect x="1188.2" y="85" width="0.1" height="15.0" fill="rgb(248,159,49)" rx="2" ry="2" />
<text  x="1191.19" y="95.5" ></text>
</g>
<g >
<title>__perf_event_enable (4 samples, 0.04%)</title><rect x="1187.6" y="133" width="0.5" height="15.0" fill="rgb(222,117,17)" rx="2" ry="2" />
<text  x="1190.59" y="143.5" ></text>
</g>
<g >
<title>perf_swevent_add (1 samples, 0.01%)</title><rect x="718.8" y="37" width="0.2" height="15.0" fill="rgb(243,221,9)" rx="2" ry="2" />
<text  x="721.84" y="47.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (10 samples, 0.10%)</title><rect x="718.7" y="197" width="1.2" height="15.0" fill="rgb(216,64,42)" rx="2" ry="2" />
<text  x="721.72" y="207.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.05%)</title><rect x="1189.4" y="117" width="0.6" height="15.0" fill="rgb(226,219,36)" rx="2" ry="2" />
<text  x="1192.40" y="127.5" ></text>
</g>
<g >
<title>func_c (3,891 samples, 39.79%)</title><rect x="719.9" y="245" width="469.5" height="15.0" fill="rgb(229,14,34)" rx="2" ry="2" />
<text  x="722.93" y="255.5" >func_c</text>
</g>
<g >
<title>thread_fun (9,780 samples, 100.00%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(206,32,41)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >thread_fun</text>
</g>
<g >
<title>intel_pmu_enable_all (8 samples, 0.08%)</title><rect x="719.0" y="85" width="0.9" height="15.0" fill="rgb(210,7,47)" rx="2" ry="2" />
<text  x="721.97" y="95.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.01%)</title><rect x="318.2" y="101" width="0.1" height="15.0" fill="rgb(212,173,46)" rx="2" ry="2" />
<text  x="321.15" y="111.5" ></text>
</g>
<g >
<title>start_thread (9,780 samples, 100.00%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(240,16,46)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >start_thread</text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (5 samples, 0.05%)</title><rect x="718.1" y="197" width="0.6" height="15.0" fill="rgb(237,190,43)" rx="2" ry="2" />
<text  x="721.12" y="207.5" ></text>
</g>
<g >
<title>update_process_times (3 samples, 0.03%)</title><rect x="1187.2" y="133" width="0.4" height="15.0" fill="rgb(240,148,39)" rx="2" ry="2" />
<text  x="1190.22" y="143.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.02%)</title><rect x="318.0" y="165" width="0.3" height="15.0" fill="rgb(249,75,6)" rx="2" ry="2" />
<text  x="321.03" y="175.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.01%)</title><rect x="718.0" y="101" width="0.1" height="15.0" fill="rgb(241,11,2)" rx="2" ry="2" />
<text  x="721.00" y="111.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.01%)</title><rect x="1187.1" y="149" width="0.1" height="15.0" fill="rgb(244,160,3)" rx="2" ry="2" />
<text  x="1190.10" y="159.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (4 samples, 0.04%)</title><rect x="1187.6" y="181" width="0.5" height="15.0" fill="rgb(233,115,24)" rx="2" ry="2" />
<text  x="1190.59" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.02%)</title><rect x="717.9" y="197" width="0.2" height="15.0" fill="rgb(253,102,5)" rx="2" ry="2" />
<text  x="720.88" y="207.5" ></text>
</g>
<g >
<title>func_d (699 samples, 7.15%)</title><rect x="318.4" y="229" width="84.3" height="15.0" fill="rgb(210,125,1)" rx="2" ry="2" />
<text  x="321.39" y="239.5" >func_d</text>
</g>
<g >
<title>raw_notifier_call_chain (1 samples, 0.01%)</title><rect x="1187.1" y="69" width="0.1" height="15.0" fill="rgb(213,168,31)" rx="2" ry="2" />
<text  x="1190.10" y="79.5" ></text>
</g>
<g >
<title>schedule (10 samples, 0.10%)</title><rect x="1188.2" y="181" width="1.2" height="15.0" fill="rgb(216,49,40)" rx="2" ry="2" />
<text  x="1191.19" y="191.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.05%)</title><rect x="718.1" y="85" width="0.6" height="15.0" fill="rgb(210,65,15)" rx="2" ry="2" />
<text  x="721.12" y="95.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.01%)</title><rect x="318.0" y="117" width="0.2" height="15.0" fill="rgb(205,218,54)" rx="2" ry="2" />
<text  x="321.03" y="127.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.04%)</title><rect x="1187.6" y="101" width="0.5" height="15.0" fill="rgb(243,45,6)" rx="2" ry="2" />
<text  x="1190.59" y="111.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (5 samples, 0.05%)</title><rect x="1187.0" y="213" width="0.6" height="15.0" fill="rgb(217,68,27)" rx="2" ry="2" />
<text  x="1189.98" y="223.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="402.6" y="213" width="0.1" height="15.0" fill="rgb(249,6,3)" rx="2" ry="2" />
<text  x="405.61" y="223.5" ></text>
</g>
<g >
<title>__perf_event_enable (5 samples, 0.05%)</title><rect x="718.1" y="133" width="0.6" height="15.0" fill="rgb(244,208,22)" rx="2" ry="2" />
<text  x="721.12" y="143.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.04%)</title><rect x="1187.6" y="117" width="0.5" height="15.0" fill="rgb(254,76,50)" rx="2" ry="2" />
<text  x="1190.59" y="127.5" ></text>
</g>
<g >
<title>all (9,780 samples, 100%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(220,156,14)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.05%)</title><rect x="718.1" y="69" width="0.6" height="15.0" fill="rgb(241,227,5)" rx="2" ry="2" />
<text  x="721.12" y="79.5" ></text>
</g>
<g >
<title>native_write_msr (5 samples, 0.05%)</title><rect x="1189.4" y="85" width="0.6" height="15.0" fill="rgb(250,206,41)" rx="2" ry="2" />
<text  x="1192.40" y="95.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (10 samples, 0.10%)</title><rect x="718.7" y="133" width="1.2" height="15.0" fill="rgb(218,102,44)" rx="2" ry="2" />
<text  x="721.72" y="143.5" ></text>
</g>
<g >
<title>perf_event_sched_in (2 samples, 0.02%)</title><rect x="718.7" y="117" width="0.3" height="15.0" fill="rgb(208,148,48)" rx="2" ry="2" />
<text  x="721.72" y="127.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (5 samples, 0.05%)</title><rect x="718.1" y="181" width="0.6" height="15.0" fill="rgb(218,183,34)" rx="2" ry="2" />
<text  x="721.12" y="191.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.0 (1 samples, 0.01%)</title><rect x="1187.1" y="133" width="0.1" height="15.0" fill="rgb(231,109,30)" rx="2" ry="2" />
<text  x="1190.10" y="143.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.02%)</title><rect x="717.9" y="165" width="0.2" height="15.0" fill="rgb(251,207,44)" rx="2" ry="2" />
<text  x="720.88" y="175.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="162.0" y="245" width="0.3" height="15.0" fill="rgb(220,27,44)" rx="2" ry="2" />
<text  x="165.02" y="255.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.01%)</title><rect x="1188.1" y="197" width="0.1" height="15.0" fill="rgb(215,31,34)" rx="2" ry="2" />
<text  x="1191.07" y="207.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.05%)</title><rect x="1189.4" y="245" width="0.6" height="15.0" fill="rgb(248,203,13)" rx="2" ry="2" />
<text  x="1192.40" y="255.5" ></text>
</g>
<g >
<title>ctx_sched_in (2 samples, 0.02%)</title><rect x="718.7" y="101" width="0.3" height="15.0" fill="rgb(249,94,35)" rx="2" ry="2" />
<text  x="721.72" y="111.5" ></text>
</g>
<g >
<title>timekeeping_advance (1 samples, 0.01%)</title><rect x="717.9" y="101" width="0.1" height="15.0" fill="rgb(247,167,11)" rx="2" ry="2" />
<text  x="720.88" y="111.5" ></text>
</g>
<g >
<title>remote_function (5 samples, 0.05%)</title><rect x="718.1" y="165" width="0.6" height="15.0" fill="rgb(225,40,9)" rx="2" ry="2" />
<text  x="721.12" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="402.6" y="181" width="0.1" height="15.0" fill="rgb(233,147,13)" rx="2" ry="2" />
<text  x="405.61" y="191.5" ></text>
</g>
<g >
<title>perf_event_sched_in (1 samples, 0.01%)</title><rect x="1188.2" y="117" width="0.1" height="15.0" fill="rgb(233,132,20)" rx="2" ry="2" />
<text  x="1191.19" y="127.5" ></text>
</g>
<g >
<title>x86_pmu_enable (9 samples, 0.09%)</title><rect x="1188.3" y="101" width="1.1" height="15.0" fill="rgb(205,213,22)" rx="2" ry="2" />
<text  x="1191.31" y="111.5" ></text>
</g>
<g >
<title>timekeeping_advance (1 samples, 0.01%)</title><rect x="1187.1" y="101" width="0.1" height="15.0" fill="rgb(233,143,42)" rx="2" ry="2" />
<text  x="1190.10" y="111.5" ></text>
</g>
<g >
<title>schedule (10 samples, 0.10%)</title><rect x="718.7" y="181" width="1.2" height="15.0" fill="rgb(222,71,52)" rx="2" ry="2" />
<text  x="721.72" y="191.5" ></text>
</g>
<g >
<title>__schedule (10 samples, 0.10%)</title><rect x="718.7" y="165" width="1.2" height="15.0" fill="rgb(235,77,44)" rx="2" ry="2" />
<text  x="721.72" y="175.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.02%)</title><rect x="318.0" y="133" width="0.3" height="15.0" fill="rgb(240,106,1)" rx="2" ry="2" />
<text  x="321.03" y="143.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="318.3" y="181" width="0.1" height="15.0" fill="rgb(216,161,25)" rx="2" ry="2" />
<text  x="321.27" y="191.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="318.3" y="197" width="0.1" height="15.0" fill="rgb(224,197,1)" rx="2" ry="2" />
<text  x="321.27" y="207.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.01%)</title><rect x="1187.1" y="117" width="0.1" height="15.0" fill="rgb(222,45,47)" rx="2" ry="2" />
<text  x="1190.10" y="127.5" ></text>
</g>
<g >
<title>native_write_msr (8 samples, 0.08%)</title><rect x="719.0" y="69" width="0.9" height="15.0" fill="rgb(215,56,48)" rx="2" ry="2" />
<text  x="721.97" y="79.5" ></text>
</g>
<g >
<title>timekeeping_advance (1 samples, 0.01%)</title><rect x="162.1" y="117" width="0.2" height="15.0" fill="rgb(234,21,18)" rx="2" ry="2" />
<text  x="165.15" y="127.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (4 samples, 0.04%)</title><rect x="717.6" y="229" width="0.5" height="15.0" fill="rgb(205,205,16)" rx="2" ry="2" />
<text  x="720.64" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="402.6" y="149" width="0.1" height="15.0" fill="rgb(205,222,54)" rx="2" ry="2" />
<text  x="405.61" y="159.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (5 samples, 0.05%)</title><rect x="1187.0" y="229" width="0.6" height="15.0" fill="rgb(211,12,52)" rx="2" ry="2" />
<text  x="1189.98" y="239.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="717.9" y="213" width="0.2" height="15.0" fill="rgb(232,42,32)" rx="2" ry="2" />
<text  x="720.88" y="223.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (8 samples, 0.08%)</title><rect x="719.0" y="117" width="0.9" height="15.0" fill="rgb(242,119,31)" rx="2" ry="2" />
<text  x="721.97" y="127.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (9 samples, 0.09%)</title><rect x="1188.3" y="85" width="1.1" height="15.0" fill="rgb(220,17,25)" rx="2" ry="2" />
<text  x="1191.31" y="95.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="162.1" y="101" width="0.2" height="15.0" fill="rgb(214,113,6)" rx="2" ry="2" />
<text  x="165.15" y="111.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="162.1" y="229" width="0.2" height="15.0" fill="rgb(230,37,40)" rx="2" ry="2" />
<text  x="165.15" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (4 samples, 0.04%)</title><rect x="1187.1" y="165" width="0.5" height="15.0" fill="rgb(206,156,16)" rx="2" ry="2" />
<text  x="1190.10" y="175.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.01%)</title><rect x="1187.2" y="117" width="0.1" height="15.0" fill="rgb(209,83,7)" rx="2" ry="2" />
<text  x="1190.22" y="127.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="162.1" y="181" width="0.2" height="15.0" fill="rgb(238,228,41)" rx="2" ry="2" />
<text  x="165.15" y="191.5" ></text>
</g>
<g >
<title>cpuacct_account_field (1 samples, 0.01%)</title><rect x="318.0" y="85" width="0.2" height="15.0" fill="rgb(229,68,26)" rx="2" ry="2" />
<text  x="321.03" y="95.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (5 samples, 0.05%)</title><rect x="1189.4" y="149" width="0.6" height="15.0" fill="rgb(222,70,13)" rx="2" ry="2" />
<text  x="1192.40" y="159.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.01%)</title><rect x="717.9" y="149" width="0.1" height="15.0" fill="rgb(230,26,18)" rx="2" ry="2" />
<text  x="720.88" y="159.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.01%)</title><rect x="717.9" y="117" width="0.1" height="15.0" fill="rgb(217,64,22)" rx="2" ry="2" />
<text  x="720.88" y="127.5" ></text>
</g>
<g >
<title>__schedule (5 samples, 0.05%)</title><rect x="1189.4" y="181" width="0.6" height="15.0" fill="rgb(231,36,23)" rx="2" ry="2" />
<text  x="1192.40" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="717.8" y="213" width="0.1" height="15.0" fill="rgb(219,180,16)" rx="2" ry="2" />
<text  x="720.76" y="223.5" ></text>
</g>
<g >
<title>event_function (4 samples, 0.04%)</title><rect x="1187.6" y="149" width="0.5" height="15.0" fill="rgb(216,132,8)" rx="2" ry="2" />
<text  x="1190.59" y="159.5" ></text>
</g>
<g >
<title>test (9,780 samples, 100.00%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(212,108,5)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >test</text>
</g>
<g >
<title>schedule (5 samples, 0.05%)</title><rect x="1189.4" y="197" width="0.6" height="15.0" fill="rgb(205,8,24)" rx="2" ry="2" />
<text  x="1192.40" y="207.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (10 samples, 0.10%)</title><rect x="1188.2" y="197" width="1.2" height="15.0" fill="rgb(230,106,35)" rx="2" ry="2" />
<text  x="1191.19" y="207.5" ></text>
</g>
<g >
<title>ctx_resched (5 samples, 0.05%)</title><rect x="718.1" y="117" width="0.6" height="15.0" fill="rgb(217,53,26)" rx="2" ry="2" />
<text  x="721.12" y="127.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (10 samples, 0.10%)</title><rect x="718.7" y="229" width="1.2" height="15.0" fill="rgb(212,96,17)" rx="2" ry="2" />
<text  x="721.72" y="239.5" ></text>
</g>
<g >
<title>x86_pmu_enable (8 samples, 0.08%)</title><rect x="719.0" y="101" width="0.9" height="15.0" fill="rgb(248,110,2)" rx="2" ry="2" />
<text  x="721.97" y="111.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (5 samples, 0.05%)</title><rect x="1187.6" y="213" width="0.6" height="15.0" fill="rgb(233,154,38)" rx="2" ry="2" />
<text  x="1190.59" y="223.5" ></text>
</g>
<g >
<title>func_b (2,629 samples, 26.88%)</title><rect x="402.7" y="245" width="317.2" height="15.0" fill="rgb(208,220,25)" rx="2" ry="2" />
<text  x="405.73" y="255.5" >func_b</text>
</g>
<g >
<title>update_wall_time (1 samples, 0.01%)</title><rect x="162.1" y="133" width="0.2" height="15.0" fill="rgb(218,102,36)" rx="2" ry="2" />
<text  x="165.15" y="143.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="162.1" y="197" width="0.2" height="15.0" fill="rgb(213,101,54)" rx="2" ry="2" />
<text  x="165.15" y="207.5" ></text>
</g>
<g >
<title>tick_sched_handle (3 samples, 0.03%)</title><rect x="1187.2" y="149" width="0.4" height="15.0" fill="rgb(206,90,3)" rx="2" ry="2" />
<text  x="1190.22" y="159.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="402.6" y="165" width="0.1" height="15.0" fill="rgb(210,216,3)" rx="2" ry="2" />
<text  x="405.61" y="175.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="402.6" y="197" width="0.1" height="15.0" fill="rgb(207,196,39)" rx="2" ry="2" />
<text  x="405.61" y="207.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (10 samples, 0.10%)</title><rect x="1188.2" y="229" width="1.2" height="15.0" fill="rgb(205,11,22)" rx="2" ry="2" />
<text  x="1191.19" y="239.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.01%)</title><rect x="162.1" y="165" width="0.2" height="15.0" fill="rgb(211,139,51)" rx="2" ry="2" />
<text  x="165.15" y="175.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (10 samples, 0.10%)</title><rect x="718.7" y="213" width="1.2" height="15.0" fill="rgb(252,48,37)" rx="2" ry="2" />
<text  x="721.72" y="223.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.0 (1 samples, 0.01%)</title><rect x="717.9" y="133" width="0.1" height="15.0" fill="rgb(214,87,45)" rx="2" ry="2" />
<text  x="720.88" y="143.5" ></text>
</g>
<g >
<title>tick_sched_handle (2 samples, 0.02%)</title><rect x="318.0" y="149" width="0.3" height="15.0" fill="rgb(231,112,41)" rx="2" ry="2" />
<text  x="321.03" y="159.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.05%)</title><rect x="1189.4" y="165" width="0.6" height="15.0" fill="rgb(208,166,11)" rx="2" ry="2" />
<text  x="1192.40" y="175.5" ></text>
</g>
<g >
<title>flexible_sched_in (1 samples, 0.01%)</title><rect x="718.8" y="69" width="0.2" height="15.0" fill="rgb(228,0,6)" rx="2" ry="2" />
<text  x="721.84" y="79.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.01%)</title><rect x="402.6" y="69" width="0.1" height="15.0" fill="rgb(236,65,39)" rx="2" ry="2" />
<text  x="405.61" y="79.5" ></text>
</g>
<g >
<title>account_entity_dequeue (1 samples, 0.01%)</title><rect x="318.2" y="69" width="0.1" height="15.0" fill="rgb(223,166,30)" rx="2" ry="2" />
<text  x="321.15" y="79.5" ></text>
</g>
<g >
<title>__schedule (10 samples, 0.10%)</title><rect x="1188.2" y="165" width="1.2" height="15.0" fill="rgb(217,17,12)" rx="2" ry="2" />
<text  x="1191.19" y="175.5" ></text>
</g>
<g >
<title>scheduler_tick (2 samples, 0.02%)</title><rect x="1187.3" y="117" width="0.3" height="15.0" fill="rgb(254,149,31)" rx="2" ry="2" />
<text  x="1190.35" y="127.5" ></text>
</g>
<g >
<title>event_function (5 samples, 0.05%)</title><rect x="718.1" y="149" width="0.6" height="15.0" fill="rgb(205,91,50)" rx="2" ry="2" />
<text  x="721.12" y="159.5" ></text>
</g>
<g >
<title>native_write_msr (9 samples, 0.09%)</title><rect x="1188.3" y="69" width="1.1" height="15.0" fill="rgb(215,44,15)" rx="2" ry="2" />
<text  x="1191.31" y="79.5" ></text>
</g>
<g >
<title>ctx_sched_in (1 samples, 0.01%)</title><rect x="1188.2" y="101" width="0.1" height="15.0" fill="rgb(237,203,10)" rx="2" ry="2" />
<text  x="1191.19" y="111.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (10 samples, 0.10%)</title><rect x="1188.2" y="133" width="1.2" height="15.0" fill="rgb(249,172,52)" rx="2" ry="2" />
<text  x="1191.19" y="143.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (5 samples, 0.05%)</title><rect x="718.1" y="213" width="0.6" height="15.0" fill="rgb(207,165,28)" rx="2" ry="2" />
<text  x="721.12" y="223.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="402.6" y="117" width="0.1" height="15.0" fill="rgb(214,18,24)" rx="2" ry="2" />
<text  x="405.61" y="127.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (5 samples, 0.05%)</title><rect x="1189.4" y="133" width="0.6" height="15.0" fill="rgb(224,128,45)" rx="2" ry="2" />
<text  x="1192.40" y="143.5" ></text>
</g>
<g >
<title>finish_task_switch (10 samples, 0.10%)</title><rect x="718.7" y="149" width="1.2" height="15.0" fill="rgb(242,30,5)" rx="2" ry="2" />
<text  x="721.72" y="159.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (5 samples, 0.05%)</title><rect x="1187.0" y="197" width="0.6" height="15.0" fill="rgb(252,177,46)" rx="2" ry="2" />
<text  x="1189.98" y="207.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="318.2" y="117" width="0.1" height="15.0" fill="rgb(218,122,26)" rx="2" ry="2" />
<text  x="321.15" y="127.5" ></text>
</g>
<g >
<title>finish_task_switch (10 samples, 0.10%)</title><rect x="1188.2" y="149" width="1.2" height="15.0" fill="rgb(223,209,11)" rx="2" ry="2" />
<text  x="1191.19" y="159.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (5 samples, 0.05%)</title><rect x="1187.0" y="181" width="0.6" height="15.0" fill="rgb(238,94,27)" rx="2" ry="2" />
<text  x="1189.98" y="191.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.01%)</title><rect x="718.0" y="117" width="0.1" height="15.0" fill="rgb(216,141,26)" rx="2" ry="2" />
<text  x="721.00" y="127.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="402.6" y="101" width="0.1" height="15.0" fill="rgb(211,130,16)" rx="2" ry="2" />
<text  x="405.61" y="111.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="162.1" y="213" width="0.2" height="15.0" fill="rgb(238,76,24)" rx="2" ry="2" />
<text  x="165.15" y="223.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="718.0" y="133" width="0.1" height="15.0" fill="rgb(246,7,36)" rx="2" ry="2" />
<text  x="721.00" y="143.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (4 samples, 0.04%)</title><rect x="1187.6" y="197" width="0.5" height="15.0" fill="rgb(225,179,43)" rx="2" ry="2" />
<text  x="1190.59" y="207.5" ></text>
</g>
<g >
<title>pvclock_gtod_notify (1 samples, 0.01%)</title><rect x="1187.1" y="53" width="0.1" height="15.0" fill="rgb(219,72,13)" rx="2" ry="2" />
<text  x="1190.10" y="63.5" ></text>
</g>
<g >
<title>visit_groups_merge (2 samples, 0.02%)</title><rect x="718.7" y="85" width="0.3" height="15.0" fill="rgb(209,23,54)" rx="2" ry="2" />
<text  x="721.72" y="95.5" ></text>
</g>
<g >
<title>perf_event_task_tick (2 samples, 0.02%)</title><rect x="1187.3" y="101" width="0.3" height="15.0" fill="rgb(245,25,29)" rx="2" ry="2" />
<text  x="1190.35" y="111.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="402.6" y="133" width="0.1" height="15.0" fill="rgb(250,37,45)" rx="2" ry="2" />
<text  x="405.61" y="143.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (5 samples, 0.05%)</title><rect x="718.1" y="101" width="0.6" height="15.0" fill="rgb(233,185,25)" rx="2" ry="2" />
<text  x="721.12" y="111.5" ></text>
</g>
<g >
<title>timekeeping_update (1 samples, 0.01%)</title><rect x="1187.1" y="85" width="0.1" height="15.0" fill="rgb(210,110,39)" rx="2" ry="2" />
<text  x="1190.10" y="95.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (5 samples, 0.05%)</title><rect x="1189.4" y="101" width="0.6" height="15.0" fill="rgb(232,105,36)" rx="2" ry="2" />
<text  x="1192.40" y="111.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.04%)</title><rect x="1187.6" y="69" width="0.5" height="15.0" fill="rgb(232,173,51)" rx="2" ry="2" />
<text  x="1190.59" y="79.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.01%)</title><rect x="318.2" y="85" width="0.1" height="15.0" fill="rgb(213,165,43)" rx="2" ry="2" />
<text  x="321.15" y="95.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.0 (1 samples, 0.01%)</title><rect x="162.1" y="149" width="0.2" height="15.0" fill="rgb(244,158,54)" rx="2" ry="2" />
<text  x="165.15" y="159.5" ></text>
</g>
</g>
</svg>
